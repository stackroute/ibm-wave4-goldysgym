version: '2'
services:  
  front-end: 
    build: angular-project/
    restart: always
    network_mode: "host"
    hostname: localhost
    # ports:
    #   - 8888:8888
  
  mongo:
    image: mongo:3.4-jessie
    ports:
      - 27017:27017
    expose:
      - 27017
    container_name: mongonew
    network_mode: "host"
    volumes:
      - /mongo-volume:/data/db


  db:
    image: mysql:5.7
    restart: always
    container_name: mysqlnew
    network_mode: "host"
    hostname: localhost
    volumes:
      - '/mysql-volume:/var/lib/mysql'
    environment:
      MYSQL_DATABASE: jwtdb
      # So you don't have to use root, but you can if you like
      # Password for root access
      MYSQL_ROOT_PASSWORD: Root@123
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - 3306:3306


  eureka-server:
    build: eureka-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8761:8761


  config-service:
    build: config-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8888:8888


  zuul-apigateway:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8080:8080

    mem_reservation: 100m

  subscription-service:
    build: subscription-service/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zuul-apigateway
      - config-service
      - eureka-server
      - mongo
    ports:
      - 9003:9003



  enrollment:
    build: enrollment-service/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zuul-apigateway
      - rabbitmq
      - config-service
      - eureka-server
      - mongo
    ports:
      - 8091:8091


  program-schedular:
    build: program-schedular/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zuul-apigateway
      - config-service
      - eureka-server
      - mongo
    ports:
      - 8092:8092



  program-service:
    build: program-service/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zuul-apigateway
      - config-service
      - eureka-server
      - mongo
      - rabbitmq
    ports:
      - 9001:9001

  trainer-management-service:
    build: trainer-management-service/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - 9004:9004


  user-authentication-service:
    build: user-authentication-service/
    restart: always
    network_mode: "host"
    hostname: localhost
    depends_on:
      - rabbitmq
      - config-service
      - eureka-server
      - db
    ports:
      - 9002:9002



  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbit
    ports:
       - 15672:15672
       - 5672:5672
    labels:
       NAME: rabbitmq

  prom:
    image: quay.io/prometheus/prometheus:v2.0.0
    volumes:
      - /data/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    depends_on:
      - exporter

  exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    network_mode: host

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    network_mode: "host"
    hostname: localhost
    depends_on:
      - prom
